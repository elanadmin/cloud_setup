AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: "EC2 ImageBuilder Pipeline PreRequisites."

Parameters:
  RoleName:
    Description: EC2ImageBuilder RoleName.
    Type: String
    Default: EC2ImageBuilderRole
  
  VPCID:
    Description: EC2 ImageBuilder VPCID.
    Type: String
    Default: vpc-0923fd2d87727a89f
  
  SubnetName:
    Description: EC2 ImageBuilder SubnetName.
    Type: String
    Default: Public Automation Subnet
  
  SubnetCIDR:
    Description: EC2 ImageBuilder SubnetCIDR.
    Type: String
    Default: 10.95.239.0/26

  SecurityGroupName:
    Description: EC2 ImageBuilder SecurityGroupName.
    Type: String
    Default: ec2imagebuilder-sg

  EC2InstanceProfileName:
    Description: EC2ImageBuilder InstanceProfile.
    Type: String
    Default: EC2ImageBuilderInstanceProfile

  EC2ImageBuilderExtraPolicyName:
    Description: EC2ImageBuilder Extra Policy.
    Type: String
    Default: EC2ImageBuilderExtraPolicy
  
  EC2ImageBuilderInfraConfigName:
    Description: EC2ImageBuilder Infrastructure Configuration Name.
    Type: String
    Default: linux-infrastructure-golden
  
  EC2ImageBuilderKeyPair:
    Description: EC2ImageBuilder KeyPair.
    Type: String
    Default: ec2imagebuilder
  
  SNSTopicName:
    Description: EC2ImageBuilder SNS Topic.
    Type: String
    Default: EC2_Image_Builder_Notification

  EC2ImageBuilderS3BucketName:
    Description: EC2ImageBuilder S3 Bucket Name.
    Type: String
    Default: ec2imagebuilder-eiger-infra

  KMSAdministratorRole:
    Description: MultiAccount KMS Customer Managed Key Administrator Role.
    Type: String
    Default: "role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_6352395ed1340f4f"

  KMSShareAccounts:
    Description: MultiAccount KMS Customer Managed Key Administrator Role.
    Type: CommaDelimitedList
    Default: "arn:aws:iam::169523143400:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_6352395ed1340f4f, arn:aws:iam::717711644138:root, arn:aws:iam::169523143400:root, arn:aws:iam::054172767459:root, arn:aws:iam::651154789300:root, arn:aws:iam::736200147754:root, arn:aws:iam::601697125460:root, arn:aws:iam::744295199755:root, arn:aws:iam::884506673723:root, arn:aws:iam::721178831155:root, arn:aws:iam::810234045291:root, arn:aws:iam::005547792680:root, arn:aws:iam::655538274560:root, arn:aws:iam::819521353958:root"

  KMSMAAlias:
    Description: MultiAccount KMS Customer Managed Key Alias.
    Type: String
    Default: "alias/ebs_makey"

Resources:
    InstanceSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPCID
        CidrBlock: !Ref SubnetCIDR
        AvailabilityZone: "us-east-1a"
        Tags:
        - Key: Name
          Value: !Ref SubnetName

    InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: !Ref SecurityGroupName
        GroupDescription: EC2ImageBuilder Security Group
        VpcId:
          Ref: VPCID
        SecurityGroupIngress:
        - Description: Allow outbound TLS traffic
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - Description: Allow outbound TLS traffic
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: Allow outbound SSH traffic
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - Description: Allow all outbound traffic
          IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
        Tags:
        - Key: Name
          Value: !Ref SecurityGroupName

    EC2ImageBuilderS3Bucket:
        Type: 'AWS::S3::Bucket'
        Properties:
          BucketName: !Ref EC2ImageBuilderS3BucketName
    
    ListBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: !Ref EC2ImageBuilderS3Bucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:GetObject'
                Effect: Allow
                Resource: !Sub arn:aws:s3:::${EC2ImageBuilderS3BucketName}/*
                Principal: "*"
                Condition:
                  StringEquals:
                    aws:PrincipalOrgID: "o-980c72tm8e"
              - Action:
                  - 's3:ListBucket'
                Effect: Allow
                Resource: !Sub arn:aws:s3:::${EC2ImageBuilderS3BucketName}
                Principal: "*"
                Condition:
                  StringEquals:
                    aws:PrincipalOrgID: "o-980c72tm8e"
    
    ec2imagebuilderrole:
        Type: "AWS::IAM::Role"
        Properties:
            RoleName: !Ref RoleName
            ManagedPolicyArns:
                - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
                - "arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds"
                - "arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder"
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    Effect: Allow
                    Principal:
                        Service:
                            - ec2.amazonaws.com
                    Action: sts:AssumeRole
            Path: "/"
    
    EC2ImageBuilderExtraPolicy:
        Type: AWS::IAM::Policy
        DependsOn: ec2imagebuilderrole
        Properties:
          PolicyName: !Sub ${EC2ImageBuilderExtraPolicyName}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DetachNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeNetworkInterfaceAttribute
                  - ec2:CreateTags
                  - ec2:DeleteNetworkInterface
                  - ec2:AttachNetworkInterface
                  - ssm:SendCommand
                  - inspector:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: "arn:aws:s3:::ec2imagebuilder*"
          Roles:
            - !Ref RoleName
                
    ec2imagebuilderinstanceprofile:
        Type: "AWS::IAM::InstanceProfile"
        DependsOn: ec2imagebuilderrole
        Properties:
          InstanceProfileName: !Ref EC2InstanceProfileName
          Path: "/"
          Roles: 
            - !Ref RoleName

    ImageBuilderInfrastructureConfiguration:
        Type: "AWS::ImageBuilder::InfrastructureConfiguration"
        DependsOn: ec2imagebuilderinstanceprofile
        Properties:
          Name: !Ref EC2ImageBuilderInfraConfigName
          Description: "Linux Golden Image Infrastructure Configuration i.e Common Infrastructure Configuration for AmazonLinux2, CentOS7/8, RHEL7/8."
          InstanceTypes: 
            - "t2.medium"
          InstanceProfileName: !Ref EC2InstanceProfileName
          InstanceMetadataOptions:
              HttpPutResponseHopLimit: 2
              HttpTokens: required
          SubnetId: !Ref InstanceSubnet
          SecurityGroupIds: 
            - !Ref InstanceSecurityGroup
          Logging: 
                S3Logs: 
                    S3BucketName: !Ref EC2ImageBuilderS3BucketName
                    S3KeyPrefix: "Logs"
          KeyPair: !Ref EC2ImageBuilderKeyPair
          TerminateInstanceOnFailure: true
          Tags: 
              Purpose: "GoldenImage"
              Platform: "Linux"
    
    MultiAccountKMSKey:
        Type: "AWS::KMS::Key"
        Properties:
            Enabled: true
            Description: "Multi-Account Key used for Golden Image EBS Encryption."
            KeyUsage: "ENCRYPT_DECRYPT"
            KeyPolicy:
                Version: 2012-10-17
                Id: KeyConsolePolicy
                Statement:
                    - Sid: "Enable IAM User Permissions"
                      Effect: Allow
                      Principal:
                        AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
                      Action: kms:*
                      Resource: "*"
                    - Sid: "Allow access for Key Administrators"
                      Effect: Allow
                      Principal:
                        AWS: !Sub "arn:aws:iam::${AWS::AccountId}:${KMSAdministratorRole}"
                      Action:
                        - kms:Create*
                        - kms:Describe*
                        - kms:Enable*
                        - kms:List
                        - kms:Put*
                        - kms:Update*
                        - kms:Revoke*
                        - kms:Disable*
                        - kms:Get*
                        - kms:Delete*
                        - kms:TagResource
                        - kms:UntagResource
                        - kms:ScheduleKeyDeletion
                        - kms:CancelKeyDeletion
                      Resource: "*"
                    - Sid: "Allow use of the key"
                      Effect: Allow
                      Principal: 
                          AWS: !Ref KMSShareAccounts
                      Action: 
                        - kms:Encrypt
                        - kms:Decrypt
                        - kms:ReEncrypt*
                        - kms:GenerateDataKey*
                        - kms:DescribeKey
                      Resource : "*"
                    - Sid: "Allow attachment of persistent resources"
                      Effect: Allow
                      Principal:
                          AWS: !Ref KMSShareAccounts
                      Action:
                        - kms:CreateGrant
                        - kms:ListGrants
                        - kms:RevokeGrant
                      Resource : "*"
                      Condition:
                        Bool:
                          "kms:GrantIsForAWSResource": "true"     
            KeySpec: "SYMMETRIC_DEFAULT"
            MultiRegion: false

    KMSAlias:
        Type: 'AWS::KMS::Alias'
        Properties:
            AliasName: !Ref KMSMAAlias
            TargetKeyId: !Ref MultiAccountKMSKey